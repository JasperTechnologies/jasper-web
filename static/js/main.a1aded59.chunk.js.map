{"version":3,"sources":["logo.png","ipadcomp.png","ipadstand.jpg","App.js","serviceWorker.js","index.js"],"names":["module","exports","Copyright","Typography","variant","color","align","Link","Date","getFullYear","useStyles","makeStyles","theme","body","backgroundColor","palette","common","white","ul","margin","padding","li","listStyle","centerContainer","display","justifyContent","paddingBottom","paddingTop","logo","width","breakpoints","up","ipad","alignSelf","appBar","borderBottom","divider","toolbar","flexWrap","toolbarTitle","flexGrow","link","spacing","header1","down","fontSize","experienceIcon","experienceGrid","alignItems","minHeight","experienceContainer","heroContent","cardHeader","grey","cardPricing","marginBottom","footer","borderTop","marginTop","scrollToRef","ref","window","scrollTo","top","current","offsetTop","behavior","Boolean","location","hostname","match","ReactDOM","render","props","classes","benefitContainerRef","useRef","Fragment","CssBaseline","AppBar","position","elevation","className","Toolbar","alt","src","Button","onClick","Grid","container","justify","xs","component","gutterBottom","direction","sm","ipadstand","Container","maxWidth","Box","mt","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a1aded59.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2b8098fa.png\";","module.exports = __webpack_public_path__ + \"static/media/ipadcomp.9009dc40.png\";","module.exports = __webpack_public_path__ + \"static/media/ipadstand.9783219a.jpg\";","import React, { useRef } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport logo from './logo.png';\nimport ipad from './ipadcomp.png'\nimport ipadstand from './ipadstand.jpg'\n\n// icons\nimport Check from '@material-ui/icons/Check';\nimport SupervisorAccount from '@material-ui/icons/SupervisorAccount';\nimport AvTimer from '@material-ui/icons/AvTimer';\nimport Search from '@material-ui/icons/Search';\nimport Money from '@material-ui/icons/Money';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\">\n        Jasper Technologies\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n    ul: {\n      margin: 0,\n      padding: 0,\n    },\n    li: {\n      listStyle: 'none',\n    }\n  },\n  centerContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    paddingBottom: \"5rem\",\n    paddingTop: \"5rem\"\n  },\n  logo: {\n    width: '100px',\n    [theme.breakpoints.up('sm')]: {\n      width: '300px',\n    }\n  },\n  ipad: {\n    width: '80%',\n    alignSelf: 'center'\n  },\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: 'wrap',\n    justifyContent: 'space-between'\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  },\n  header1: {\n    [theme.breakpoints.down('xs')]: {\n      fontSize: '26px !important'\n    }\n  },\n  experienceIcon: {\n    fontSize: '50px',\n  },\n  experienceGrid: {\n    alignItems: 'center',\n    minHeight: '250px',\n  },\n  experienceContainer: {\n    paddingTop: '80px',\n  },\n  heroContent: {\n    padding: theme.spacing(8, 0, 6),\n  },\n  cardHeader: {\n    backgroundColor: theme.palette.grey[200],\n  },\n  cardPricing: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'baseline',\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n    marginTop: theme.spacing(8),\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    [theme.breakpoints.up('sm')]: {\n      paddingTop: theme.spacing(6),\n      paddingBottom: theme.spacing(6),\n    },\n  },\n}));\n//\n// const tiers = [\n//   {\n//     title: 'Pro',\n//     subheader: 'Most popular',\n//     price: '15',\n//     description: [\n//       'Decrease Labor Costs',\n//       'Decrease Customer Time in Line',\n//       'Upsell Menu Items',\n//       'Increase Tips',\n//     ],\n//     buttonText: 'Get started',\n//     buttonVariant: 'contained',\n//   },\n// ];\n\nconst scrollToRef = (ref) => {\n  window.scrollTo({\n    top: ref.current.offsetTop,\n    behavior: 'smooth'\n  });\n}   // General scroll to element function\n\nexport default function App(props) {\n  const classes = useStyles();\n  const benefitContainerRef = useRef(null);\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"static\" color=\"white\" elevation={0} className={classes.appBar}>\n        <Toolbar className={classes.toolbar}>\n          <img alt='jasper company logo' className={classes.logo} src={logo}></img>\n          <Button variant=\"button\" color=\"textPrimary\" onClick={() => scrollToRef(benefitContainerRef)} className={classes.link}>\n            Benefits\n          </Button>\n          {\n            false && <Button variant=\"button\" color=\"textPrimary\" className={classes.link}>\n              Contact Us\n            </Button>\n          }\n        </Toolbar>\n      </AppBar>\n      {/* Hero unit */}\n      <Grid container justify=\"center\">\n        <Grid xs=\"8\" className={classes.heroContent}>\n          <Typography component=\"h1\" variant=\"h2\" className={classes.header1} align=\"center\" color=\"textPrimary\" gutterBottom>\n            Ordering Just Became Simple\n          </Typography>\n          <Typography variant=\"body1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n            Jasper is a automated self-service option for ordering food at restaurants\n          </Typography>\n        </Grid>\n        <Grid xs=\"8\" className={classes.centerContainer}>\n          <img alt='jasper sample menu' className={classes.ipad} src={ipad}></img>\n          <br></br>\n          <br></br>\n        </Grid>\n        <Grid\n          xs=\"8\"\n          className={classes.centerContainer}\n          ref={benefitContainerRef}\n        >\n          <Grid\n            xs=\"12\"\n            direction=\"column\"\n          >\n            <Grid xs=\"12\">\n              <Typography component=\"h1\" variant=\"h2\" className={classes.header1} align=\"center\" color=\"textPrimary\" gutterBottom>\n                Jasper Benefits\n              </Typography>\n            </Grid>\n            <Grid\n              container\n              xs=\"12\"\n              direction=\"row\"\n              className={classes.experienceContainer}\n            >\n              <Grid\n                xs=\"12\"\n                sm=\"6\"\n                container\n                direction=\"column\"\n                className={classes.experienceGrid}\n              >\n                <SupervisorAccount className={classes.experienceIcon} />\n                <Typography variant=\"body1\" align=\"center\" gutterBottom>\n                  Reduce Labor Costs\n                </Typography>\n                <Grid xs=\"8\">\n                  <Typography variant=\"body2\" align=\"center\" gutterBottom>\n                    Jasper requires zero employees to take orders, process payments, and leaves customers with smiles. Get the same job done for less\n                  </Typography>\n                </Grid>\n              </Grid>\n              <Grid\n                xs=\"12\"\n                sm=\"6\"\n                container\n                direction=\"column\"\n                className={classes.experienceGrid}\n              >\n                <AvTimer className={classes.experienceIcon} />\n                <Typography variant=\"body1\" align=\"center\" gutterBottom>\n                  Save Customer Time\n                </Typography>\n                <Grid xs=\"8\">\n                  <Typography variant=\"body2\" align=\"center\" gutterBottom>\n                    Customers love pictures. Our visuals and experience show how delicious the menu items are leaving potential buyers with excitement\n                  </Typography>\n                </Grid>\n              </Grid>\n              <Grid\n                xs=\"12\"\n                sm=\"6\"\n                container\n                direction=\"column\"\n                className={classes.experienceGrid}\n              >\n                <Search className={classes.experienceIcon} />\n                <Typography variant=\"body1\" align=\"center\" gutterBottom>\n                  Increase Sales\n                </Typography>\n                <Grid xs=\"8\">\n                  <Typography variant=\"body2\" align=\"center\" gutterBottom>\n                    Menus seem to be getting larger and larger, and customers are increasingly confused by them. Jasper helps speed up this process with seamless menu item discovery\n                  </Typography>\n                </Grid>\n              </Grid>\n              <Grid\n                xs=\"12\"\n                sm=\"6\"\n                container\n                direction=\"column\"\n                className={classes.experienceGrid}\n              >\n                <Money className={classes.experienceIcon} />\n                <Typography variant=\"body1\" align=\"center\" gutterBottom>\n                  Boost Tips\n                </Typography>\n                <Grid xs=\"8\">\n                  <Typography variant=\"body2\" align=\"center\" gutterBottom>\n                    People tend to tip more when politely suggested to do so with friendly default tip amounts\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid xs=\"8\" className={classes.heroContent}>\n          <Typography component=\"h1\" variant=\"h2\" className={classes.header1} align=\"center\" color=\"textPrimary\" gutterBottom>\n            Jasper Experiences\n          </Typography>\n          <Typography variant=\"body1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n            Jasper offers cashier and order automation for fast-service restaurants\n          </Typography>\n        </Grid>\n        <Grid xs=\"8\" className={classes.centerContainer}>\n          <img alt='jasper sample menu' className={classes.ipad} src={ipadstand}></img>\n          <br></br>\n          <br></br>\n        </Grid>\n      </Grid>\n      <Container maxWidth=\"md\" component=\"footer\" className={classes.footer}>\n        <Box mt={5}>\n          {\n            false && <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n              Contact: Team@usejasper.com\n            </Typography>\n          }\n          <br></br>\n          <Copyright />\n        </Box>\n      </Container>\n    </React.Fragment>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}